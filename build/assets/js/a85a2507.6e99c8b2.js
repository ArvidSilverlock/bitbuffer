"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[935],{62484:e=>{e.exports=JSON.parse('{"functions":[{"name":"Variadic","desc":"Reads any amount of values using one write function","params":[{"name":"readCallback","desc":"","lua_type":"<T>(self) -> T"},{"name":"count","desc":"The amount of values to read","lua_type":"number"}],"returns":[{"desc":"","lua_type":"... T"}],"function_type":"method","source":{"line":53,"path":"src/Manipulators/Reader.lua"}},{"name":"UInt","desc":"Reads an unsigned integer of any width from 1-53","params":[{"name":"width","desc":"The bit width to read","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":71,"path":"src/Manipulators/Reader.lua"}},{"name":"Int","desc":"Reads a signed integer of any width from 1-53, note that one of these bits is used as the sign","params":[{"name":"width","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":87,"path":"src/Manipulators/Reader.lua"}},{"name":"Boolean","desc":"Reads a boolean","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":99,"path":"src/Manipulators/Reader.lua"}},{"name":"String","desc":"Reads a string that has its length encoded using a specified number of bits","params":[{"name":"lengthWidth","desc":"Amount of bits to encode the string length with, defaults to 16","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"string"}],"function_type":"method","source":{"line":112,"path":"src/Manipulators/Reader.lua"}},{"name":"NullTerminatedString","desc":"Reads characters of a string until it encounters a byte with a value of 0","params":[],"returns":[{"desc":"","lua_type":"string"}],"function_type":"method","source":{"line":130,"path":"src/Manipulators/Reader.lua"}},{"name":"Vector3","desc":"Reads a `Vector3` using 3 `Float32`s","params":[],"returns":[{"desc":"","lua_type":"Vector3"}],"function_type":"method","source":{"line":151,"path":"src/Manipulators/Reader.lua"}},{"name":"Vector3int16","desc":"Reads a `Vector3int16` using 3 `Int16`s","params":[],"returns":[{"desc":"","lua_type":"Vector3int16"}],"function_type":"method","source":{"line":163,"path":"src/Manipulators/Reader.lua"}},{"name":"Vector2","desc":"Reads a `Vector2` using 2 `Float32`s","params":[],"returns":[{"desc":"","lua_type":"Vector2"}],"function_type":"method","source":{"line":175,"path":"src/Manipulators/Reader.lua"}},{"name":"Vector2int16","desc":"Reads a `Vector2int16` using 2 `Float32`s","params":[],"returns":[{"desc":"","lua_type":"Vector2int16"}],"function_type":"method","source":{"line":187,"path":"src/Manipulators/Reader.lua"}},{"name":"CFrame","desc":"Reads a `CFrame` using a 5 bit unsigned integer to specify an axis aligned case along with its `Vector3` position, if the `CFrame` isn\'t axis aligned, it will read an `XVector`, `YVector` and, `ZVector` too","params":[],"returns":[{"desc":"","lua_type":"CFrame"}],"function_type":"method","source":{"line":199,"path":"src/Manipulators/Reader.lua"}},{"name":"BrickColor","desc":"Reads a `BrickColor` using an 11 bit unsigned integer","params":[],"returns":[{"desc":"","lua_type":"BrickColor"}],"function_type":"method","source":{"line":219,"path":"src/Manipulators/Reader.lua"}},{"name":"Color3","desc":"Reads 3 bytes, one for each RGB component","params":[],"returns":[{"desc":"","lua_type":"Color3"}],"function_type":"method","source":{"line":231,"path":"src/Manipulators/Reader.lua"}},{"name":"UDim","desc":"Reads a `UDim` using a `Float32` and `Int32`","params":[],"returns":[{"desc":"","lua_type":"UDim"}],"function_type":"method","source":{"line":243,"path":"src/Manipulators/Reader.lua"}},{"name":"UDim2","desc":"Reads a `UDim2` using two `UDim`s","params":[],"returns":[{"desc":"","lua_type":"UDim2"}],"function_type":"method","source":{"line":255,"path":"src/Manipulators/Reader.lua"}},{"name":"NumberRange","desc":"Reads a `NumberRange` using two `Float32`s","params":[],"returns":[{"desc":"","lua_type":"NumberRange"}],"function_type":"method","source":{"line":267,"path":"src/Manipulators/Reader.lua"}},{"name":"Enum","desc":"If no `enumType` is specified, it will read the `EnumItem.Type`, then read the `EnumItem` using unsigned integers whose widths depend on the amount of possible values.","params":[{"name":"enumType","desc":"The `EnumItem.Type` that the read value should have","lua_type":"Enum?"}],"returns":[{"desc":"","lua_type":"EnumItem"}],"function_type":"method","source":{"line":281,"path":"src/Manipulators/Reader.lua"}},{"name":"ColorSequence","desc":"Reads a `ColorSequence` using an unsigned 5 bit integer for the length, then a `Float32` for the `Time` and a `Color3` for the `Value` of each keypoint","params":[],"returns":[{"desc":"","lua_type":"ColorSequence"}],"function_type":"method","source":{"line":298,"path":"src/Manipulators/Reader.lua"}},{"name":"NumberSequence","desc":"Reads a `NumberSequence` using an unsigned 5 bit integer for the length, then a `Float32` for the `Time`, `Value` and `Envelope` of each keypoint","params":[{"name":"readEnvelope","desc":"Whether or not to read the value of the `Envelope`","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"NumberSequence"}],"function_type":"method","source":{"line":320,"path":"src/Manipulators/Reader.lua"}},{"name":"UInt8","desc":"Reads an 8 bit unsigned integer","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":343,"path":"src/Manipulators/Reader.lua"}},{"name":"UInt16","desc":"Reads an 16 bit unsigned integer","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":353,"path":"src/Manipulators/Reader.lua"}},{"name":"UInt24","desc":"Reads an 24 bit unsigned integer","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":363,"path":"src/Manipulators/Reader.lua"}},{"name":"UInt32","desc":"Reads an 32 bit unsigned integer","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":373,"path":"src/Manipulators/Reader.lua"}},{"name":"UInt8","desc":"Reads an 8 bit integer","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":383,"path":"src/Manipulators/Reader.lua"}},{"name":"UInt16","desc":"Reads a 16 bit integer","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":393,"path":"src/Manipulators/Reader.lua"}},{"name":"Int8","desc":"Reads a 24 bit integer","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":403,"path":"src/Manipulators/Reader.lua"}},{"name":"Int32","desc":"Reads a 32 bit integer","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":413,"path":"src/Manipulators/Reader.lua"}},{"name":"Float16","desc":"Reads a half-precision floating point number","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":423,"path":"src/Manipulators/Reader.lua"}},{"name":"Float32","desc":"Reads a single-precision floating point number","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":433,"path":"src/Manipulators/Reader.lua"}},{"name":"Float64","desc":"Reads a double-precision floating point number","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":443,"path":"src/Manipulators/Reader.lua"}}],"properties":[],"types":[],"name":"Reader","desc":"","source":{"line":39,"path":"src/Manipulators/Reader.lua"}}')}}]);