"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[755],{6438:e=>{e.exports=JSON.parse('{"functions":[{"name":"read","desc":"Reads a `value` from a buffer in big endian format.","params":[{"name":"b","desc":"The buffer to read from","lua_type":"buffer"},{"name":"offset","desc":"The offset (in bits) to read from","lua_type":"number"},{"name":"width","desc":"The width (in bits) of the value you\'re reading","lua_type":"number"}],"returns":[],"function_type":"static","source":{"line":226,"path":"src/init.lua"}},{"name":"write","desc":"Writes a `value` into a buffer in big endian format.","params":[{"name":"b","desc":"The buffer to write to","lua_type":"buffer"},{"name":"offset","desc":"The offset (in bits) to write at","lua_type":"number"},{"name":"value","desc":"The value you want to write","lua_type":"number"},{"name":"width","desc":"The width (in bits) of the value","lua_type":"number"}],"returns":[],"function_type":"static","source":{"line":239,"path":"src/init.lua"}},{"name":"readlittle","desc":"Reads a `value` from a buffer in little endian format.","params":[{"name":"b","desc":"The buffer to read from","lua_type":"buffer"},{"name":"offset","desc":"The offset (in bits) to read from","lua_type":"number"},{"name":"width","desc":"The width (in bits) of the value you\'re reading","lua_type":"number"}],"returns":[],"function_type":"static","source":{"line":251,"path":"src/init.lua"}},{"name":"writelittle","desc":"Writes a `value` into a buffer in little endian format.","params":[{"name":"b","desc":"The buffer to write to","lua_type":"buffer"},{"name":"offset","desc":"The offset (in bits) to write at","lua_type":"number"},{"name":"value","desc":"The value you want to write","lua_type":"number"},{"name":"width","desc":"The width (in bits) of the value","lua_type":"number"}],"returns":[],"function_type":"static","source":{"line":264,"path":"src/init.lua"}},{"name":"tobinary","desc":"Converts a given buffer to a binary string.","params":[{"name":"b","desc":"The buffer to convert to a string","lua_type":"buffer"},{"name":"separator","desc":"The string to separate each byte with, if not specified, each byte is separated by an underscore.","lua_type":"string?"},{"name":"prefix","desc":"If prefix is `true`, it will be prefixed with `0b`, whereas if it is a `string`, the `string` itself will be used.","lua_type":"(string | boolean)?"},{"name":"useLittleEndian","desc":"Whether or not to output it in little endian format.","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"string"}],"function_type":"static","source":{"line":278,"path":"src/init.lua"}},{"name":"frombinary","desc":"Converts a given binary string into a buffer. No characters besides `1` and `0` may be present.","params":[{"name":"str","desc":"The string to convert into a buffer","lua_type":"string"}],"returns":[{"desc":"","lua_type":"buffer"}],"function_type":"static","source":{"line":288,"path":"src/init.lua"}},{"name":"tohex","desc":"Converts a given buffer to a hexadecimal string.","params":[{"name":"b","desc":"The buffer to convert to a string","lua_type":"buffer"},{"name":"separator","desc":"The string to separate each byte with, if not specified, each byte is separated by a space.","lua_type":"string?"},{"name":"prefix","desc":"If prefix is `true`, it will be prefixed with `0x`, whereas if it is a `string`, the `string` itself will be used.","lua_type":"(string | boolean)?"},{"name":"useLittleEndian","desc":"Whether or not to output it in little endian format.","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"string"}],"function_type":"static","source":{"line":309,"path":"src/init.lua"}},{"name":"fromhex","desc":"Converts a given hexadecimal string into a buffer. No characters besides hexadecimal characters may be present.","params":[{"name":"str","desc":"The string to convert into a buffer","lua_type":"string"}],"returns":[{"desc":"","lua_type":"buffer"}],"function_type":"static","source":{"line":319,"path":"src/init.lua"}},{"name":"tobase64","desc":"Converts a given buffer to a binary string.","params":[{"name":"b","desc":"The buffer to convert to a string","lua_type":"buffer"},{"name":"separator","desc":"The string to separate every 6 bits with, if not specified, no separator will be used.","lua_type":"string?"},{"name":"prefix","desc":"The string to prefix the output with.","lua_type":"string?"}],"returns":[{"desc":"","lua_type":"string"}],"function_type":"static","source":{"line":339,"path":"src/init.lua"}},{"name":"frombase64","desc":"Converts a given base64 string into a buffer.","params":[{"name":"str","desc":"The string to convert into a buffer","lua_type":"string"}],"returns":[{"desc":"","lua_type":"buffer"}],"function_type":"static","source":{"line":349,"path":"src/init.lua"}},{"name":"reader","desc":"Creates a `Reader` object for a buffer.","params":[{"name":"b","desc":"The buffer to read from","lua_type":"buffer"},{"name":"useLittleEndian","desc":"Whether to read values in little endian","lua_type":"boolean"}],"returns":[{"desc":"","lua_type":"buffer"}],"function_type":"static","source":{"line":369,"path":"src/init.lua"}},{"name":"writer","desc":"Creates a `Writer` object for a buffer.","params":[{"name":"b","desc":"The buffer to write to","lua_type":"buffer"},{"name":"useLittleEndian","desc":"Whether to write values in little endian","lua_type":"boolean"}],"returns":[{"desc":"","lua_type":"buffer"}],"function_type":"static","source":{"line":387,"path":"src/init.lua"}}],"properties":[],"types":[],"name":"bitbuffer","desc":"","source":{"line":214,"path":"src/init.lua"}}')}}]);